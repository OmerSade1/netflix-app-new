on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Define version tag from GitHub run number
      - name: Set Version Tag
        run: |
          VERSION_TAG="v${{ github.run_number }}"
          echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV

      # Build and push DB image
      - name: Build and Push DB Image
        run: |
          docker build ./db/ -t netflix_db:${{ env.VERSION_TAG }}
          docker tag netflix_db:${{ env.VERSION_TAG }} omersade/netflix_db:${{ env.VERSION_TAG }}
          docker push omersade/netflix_db:${{ env.VERSION_TAG }}

      # Build and push NetflixMovieCatalog image
      - name: Build and Push NetflixMovieCatalog Image
        run: |
          docker build ./NetflixMovieCatalog/ -t netflix-movie-catalog:${{ env.VERSION_TAG }}
          docker tag netflix-movie-catalog:${{ env.VERSION_TAG }} omersade/netflix-movie-catalog:${{ env.VERSION_TAG }}
          docker push omersade/netflix-movie-catalog:${{ env.VERSION_TAG }}

      # Build and push NetflixFrontend image
      - name: Build and Push NetflixFrontend Image
        run: |
          docker build ./NetflixFrontend/ -t netflix-frontend:${{ env.VERSION_TAG }}
          docker tag netflix-frontend:${{ env.VERSION_TAG }} omersade/netflix-frontend:${{ env.VERSION_TAG }}
          docker push omersade/netflix-frontend:${{ env.VERSION_TAG }}

      # Start containers using the versioned tags
      - name: Start Containers
        run: |
          docker-compose pull  # Pull the versioned images
          docker-compose up -d

      # Wait for services to be healthy
      - name: Wait for Services
        run: |
          echo "Waiting for services to be ready..."
          sleep 10 # Adjust the sleep time as needed for your services to start

      # Perform a basic health check using curl
      - name: Perform Curl Check
        run: |
          curl -fsSL http://localhost:3000 || exit 1

      # Clean up the containers
      - name: Clean up Containers
        run: |
          echo "Stopping and removing containers..."
          docker-compose down






      
